---
# tasks file for k8s_master
- name: "Installing docker and iproute-tc"
  package:
     name:
         - docker
         - iproute-tc
     state: present

- name: Set up Kubernetes repository on Amazon Linux 2
  yum_repository:
    name: kubernetes
    description: Kubernetes Repo
    baseurl: https://pkgs.k8s.io/core:/stable:/v1.30/rpm/
    enabled: yes
    gpgcheck: yes
    repo_gpgcheck: yes
    gpgkey: https://pkgs.k8s.io/core:/stable:/v1.30/rpm/repodata/repomd.xml.key

- name: "Installing kubeadm,kubelet kubectl program"
  yum:
     name:
        - kubelet
        - kubectl
        - kubeadm
     state: present

- name: "Enabling the docker and kubenetes"
  service:
     name: "{{ item }}"
     state: started
     enabled: yes
  loop:
        - kubelet
        - docker

- name: "Pulling the config images"
  shell: kubeadm config images pull

- name: "Confuring the docker daemon.json file"
  copy:
    dest: /etc/docker/daemon.json
    content: |
      {
      "exec-opts": ["native.cgroupdriver=systemd"]
      }

- name: "Restarting the docker service"
  service:
     name: docker
     state: restarted

- name: "Configuring the Ip tables and refreshing sysctl"
  copy:
    dest: /etc/sysctl.d/k8s.conf
    content: |
      net.bridge.bridge-nf-call-ip6tables = 1
      net.bridge.bridge-nf-call-iptables = 1

- name: "Apply all sysctl settings"
  shell: "sysctl --system"

- name: "Starting kubeadm service"
  shell: "kubeadm init  --ignore-preflight-errors=all"

- name: Setup kubeconfig for kubectl
  block:
    - name: Create .kube directory for ec2-user
      file:
        path: "/home/ec2-user/.kube"
        state: directory
        mode: '0755'
        owner: ec2-user
        group: ec2-user

    - name: Copy admin.conf to ec2-user's kube config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: "/home/ec2-user/.kube/config"
        remote_src: yes
        owner: ec2-user
        group: ec2-user
        mode: '0644'

- name: "Installing Addons e.g flannel"
  shell: "kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml"

- name: "Creating the token"
  shell: "kubeadm token create --print-join-command"
  register: token

- debug:
       msg: "{{ token.stdout }}"
